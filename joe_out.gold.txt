which i actually believe is tesla's strongest suit the strongest **value** out of the company then many of you have heard

done one or more hours every day much of the **value** of sleeping at the bottleneck is is is given to you the next **value** of sleeping at the bottleneck is you have around the

shower or whatnot that seems to create more of the **value** of around-the-clock development shared ownership and giving your sleeping mind

criteria for that financial release is will it triple its **value** within the next few years usually three years if not

go wherever you think you can be contributing the most **value** and you can change at any time so there are

how you have to propose a financial a measurement of **value** and that measurement is totally different depending on what your

and it doesn't even mean it's the right measure of **value** you at least have to have one and then anyone

so you organically have hopefully a better and better fit **value** measurement well then these machine learning stacks this is the

no time sheets nothing like that so you get a **value** divided by expense per agenda item and for me racing had extremely low **value** relative to the other work i mean it actually has

many times i proposed it no matter how good a **value** measurement that i was able to think it just was

good then each agenda item needs to propose its own **value** right so they then end up creating their own measuring

and radio buttons um to get real-time feedback on the **value** the cost is this the bottleneck um where is the

mean range is a critical factor for ev price and **value** of the company so the dsm digital self-management will tell

flexible parts like hoses wires flexible tubes it's much higher **value** to have humans doing creative problem solving and not assembly

it's not that agile coaches don't have a a a **value** right that's not it it's that there are no single

80s so you have like paper and the cost to **compile** to turn like handwritten notes of code to turn that

paper written logic does that match the punch cards the **compile** step getting it into byte code was often months especially

have meetings to analyze the logic and then you do **compile** and teams of humans would would sort through the logic

closer to bytecode well what enabled extreme programming was fast **compile** where in less than 10 minutes you would get feedback on does it **compile** at all and eventually where did it fail and eventually

long shot and it doesn't auto comp it doesn't auto **compile** flow through with logic testing continuity testing at the same level as a modern software ide and still to **compile** from a circuit board layout in software to a physical

the steps really are to reduce the cycle time the **compile** time so getting a physical circuit board for example that

and putting them together i mean the fact that you **compile** on your machine or virtually to the point where it

goal of digital self-management your self-managing is this superior then **compile** time ideally next to you is a machine that's milling

seven years so you have a five to seven year **compile** time well you got a lot of times you might

away and your the idea is to then shorten that **compile** time because you cannot be more agile than your **compile** time so if your current procedure that you're not allowed

iteration so the goal is really engineering practices that reduce **compile** time and engineering practices that increase digital self-management um that's

said a tweet like because it could be the actual **value** i said was you know 20 words if someone can

these big monitors and it attracts people who can add **value** because you're encouraged to use the law of two feet

not no one few people had more conviction in the **value** of the stock than me so like if the universe

absolutely have to steal that storytelling that image of reducing **compile** time because that so well explains what we're trying to achieve just reduce the **compile** time that's brilliant thank you so much joe uh we